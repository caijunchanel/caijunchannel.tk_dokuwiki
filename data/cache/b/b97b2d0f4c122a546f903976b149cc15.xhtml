
<h1 class="sectionedit1" id="linux下常用vim命令">linux下常用vim命令</h1>
<div class="level1">

<p>
高级一些的编辑器，都会包含宏功能，vim当然不能缺少了，在vim中使用宏是非常方便的：
</p>
<ul>
<li class="level1"><div class="li">    qx     开始记录宏，并将结果存入寄存器x</div>
</li>
<li class="level1"><div class="li">    q     退出记录模式</div>
</li>
<li class="level1"><div class="li">    @x     播放记录在x寄存器中的宏命令</div>
</li>
<li class="level1"><div class="li">    稍微解释一下，当在normal模式下输入:qx后，你对文本的所有编辑动作将会被记录下来，再次输入q即退出了记录模</div>
</li>
<li class="level1"><div class="li">    式，然后输入@x对刚才记录下来的命令进行重复，此命令后可跟数字，表示要重复多少次，比如@x20，可以重复20次。这个在文本的批处理中是非常有用的。</div>
</li>
<li class="level1"><div class="li">    同时编辑多个文件</div>
</li>
<li class="level1"><div class="li">    在vim众多的插件中，有一个叫minibuffer的插件，就是下面所说的标签页功能了，可以支持同时编辑多个文件。</div>
</li>
<li class="level1"><div class="li">  </div>
</li>
</ul>

<p>
 标签命令
</p>
<ol>
<li class="level1"><div class="li"> :tabe fn     在一个新的标签页中编辑文件fn</div>
</li>
<li class="level1"><div class="li"> gt     切换到下一个标签页</div>
</li>
<li class="level1"><div class="li"> gT     切换到上一个标签页</div>
</li>
<li class="level1"><div class="li"> :tabr     切换到第一个标签页</div>
</li>
<li class="level1"><div class="li"> :tabl     切换到最后一个标签页</div>
</li>
<li class="level1"><div class="li"> :tabm [N]     把当前tab移动到第N个tab之后</div>
</li>
<li class="level1"><div class="li"> 对，正如你所想象的那样，跟eclipse, ue等的标签页是一个意思！</div>
</li>
</ol>

<p>
 窗口命令
</p>
<pre class="code">- ctrl+w s     水平分割窗口
- ctrl+w w     切换窗口
- ctrl+w q     退出当前窗口(由于同时有多个文件，此命令不会影响其他窗口)
- ctrl+w v     垂直分割窗口</pre>

<p>
 其他
</p>
<ol>
<li class="level1"><div class="li"> vim在保存之前不会对文件做实际的修改，只是加载到缓冲区中，对文件的编辑其实是对缓冲区的编辑，直到:w时才会存入物理文件。</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> :e file     把file加载到新的缓冲区中</div>
</li>
<li class="level2"><div class="li"> :bn     跳转到下一个缓冲区</div>
</li>
<li class="level2"><div class="li"> :bd     删除缓冲区(关闭文件)</div>
</li>
<li class="level2"><div class="li"> :sp fn     分割窗口，并将fn加载到新的窗口中</div>
</li>
</ol>

<p>
 退出编辑器
</p>
<ol>
<li class="level1"><div class="li"> :w     将缓冲区写入文件，即保存修改</div>
</li>
<li class="level1"><div class="li"> :wq     保存修改并退出</div>
</li>
<li class="level1"><div class="li"> :x     保存修改并退出</div>
</li>
<li class="level1"><div class="li"> :q     退出，如果对缓冲区进行过修改，则会提示</div>
</li>
<li class="level1"><div class="li"> :q!     强制退出，放弃修改</div>
</li>
</ol>

<p>
 查找替换
</p>
<ol>
<li class="level1"><div class="li"> /pattern     向后搜索字符串pattern</div>
</li>
<li class="level1"><div class="li"> ?pattern     向前搜索字符串pattern</div>
</li>
<li class="level1"><div class="li"> n     下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)</div>
</li>
<li class="level1"><div class="li"> N     上一个匹配(同上)</div>
</li>
<li class="level1"><div class="li"> :%s/old/new/g     搜索整个文件，将所有的old替换为new</div>
</li>
<li class="level1"><div class="li"> :%s/old/new/gc     搜索整个文件，将所有的old替换为new，每次都要你确认是否替换</div>
</li>
</ol>

<p>
 复制粘贴
</p>
<ol>
<li class="level1"><div class="li"> dd     删除光标所在行</div>
</li>
<li class="level1"><div class="li"> dw     删除一个字(word)</div>
</li>
<li class="level1"><div class="li"> x     删除当前字符</div>
</li>
<li class="level1"><div class="li"> X     删除前一个字符</div>
</li>
<li class="level1"><div class="li"> D     删除到行末</div>
</li>
<li class="level1"><div class="li"> yy     复制一行，此命令前可跟数字，标识复制多行，如6yy，表示从当前行开始复制6行</div>
</li>
<li class="level1"><div class="li"> yw     复制一个字</div>
</li>
<li class="level1"><div class="li"> y$     复制到行末</div>
</li>
<li class="level1"><div class="li"> p     粘贴粘贴板的内容到当前行的下面</div>
</li>
<li class="level1"><div class="li"> P     粘贴粘贴板的内容到当前行的上面</div>
</li>
<li class="level1"><div class="li"> ]p     有缩进的粘贴，vim会自动调节代码的缩进</div>
</li>
<li class="level1"><div class="li"> “a     将内容放入/存入a寄存器，可以支持多粘贴板</div>
</li>
</ol>

<p>
 附：比如常用的一个寄存器就是系统寄存器，名称为+，所以从系统粘贴板粘贴到vim中的命令为”+p,注意此处的+不表示操作符，二十一个寄存器。
</p>

<p>
 移动光标
</p>
<pre class="code">- 在vim中移动光标跟其他的编辑器中有很大的区别，不过一旦学会了，就会飞速的在文本中移动了。</pre>
<ol>
<li class="level1"><div class="li"> h,j,k,l     上，下，左，右</div>
</li>
<li class="level1"><div class="li"> ctrl-f     上翻一页</div>
</li>
<li class="level1"><div class="li"> ctrl-b     下翻一页</div>
</li>
<li class="level1"><div class="li"> %     跳到与当前括号匹配的括号处，如当前在{，则跳转到与之匹配的}处</div>
</li>
<li class="level1"><div class="li"> w     跳到下一个字首，按标点或单词分割</div>
</li>
<li class="level1"><div class="li"> W     跳到下一个字首，长跳，如end-of-line被认为是一个字</div>
</li>
<li class="level1"><div class="li"> e     跳到下一个字尾</div>
</li>
<li class="level1"><div class="li"> E     跳到下一个字尾，长跳</div>
</li>
<li class="level1"><div class="li"> b     跳到上一个字</div>
</li>
<li class="level1"><div class="li"> B     跳到上一个字，长跳</div>
</li>
<li class="level1"><div class="li"> 0     跳至行首，不管有无缩进，就是跳到第0个字符</div>
</li>
<li class="level1"><div class="li"> ^     跳至行首的第一个字符</div>
</li>
<li class="level1"><div class="li"> $     跳至行尾</div>
</li>
<li class="level1"><div class="li"> gg     跳至文件的第一行</div>
</li>
<li class="level1"><div class="li"> gd     跳至当前光标所在的变量的声明处</div>
</li>
<li class="level1"><div class="li"> [N]G     跳到第N行，如0G，就等价于gg，100G就是第100行</div>
</li>
<li class="level1"><div class="li"> fx     在当前行中找x字符，找到了就跳转至</div>
</li>
<li class="level1"><div class="li"> ;     重复上一个f命令，而不用重复的输入fx</div>
</li>
<li class="level1"><div class="li"> tx     与fx类似，但是只是跳转到x的前一个字符处</div>
</li>
<li class="level1"><div class="li"> Fx     跟fx的方向相反</div>
</li>
<li class="level1"><div class="li"> ),(     跳转到上/下一个语句</div>
</li>
<li class="level1"><div class="li"> *     查找光标所在处的单词，向下查找</div>
</li>
<li class="level1"><div class="li"> #     查找光标所在处的单词，向上查找</div>
</li>
<li class="level1"><div class="li"> `.     跳转至上次编辑位置</div>
</li>
</ol>

<p>
 在屏幕上移动
</p>
<ol>
<li class="level1"><div class="li"> H     移动光标到当前屏幕上最上边的一行</div>
</li>
<li class="level1"><div class="li"> M     移动光标到当前屏幕上中间的一行</div>
</li>
<li class="level1"><div class="li"> L     移动光标到当前屏幕上最下边的一行</div>
</li>
</ol>

<p>
 书签
</p>
<ol>
<li class="level1"><div class="li"> ma     把当前位置存成标签a</div>
</li>
<li class="level1"><div class="li"> `a     跳转到标签a处</div>
</li>
</ol>

<p>
 编辑
</p>
<ol>
<li class="level1"><div class="li"> r     替换一个字符</div>
</li>
<li class="level1"><div class="li"> J     将下一行和当前行连接为一行</div>
</li>
<li class="level1"><div class="li"> cc     删除当前行并进入编辑模式</div>
</li>
<li class="level1"><div class="li"> cw     删除当前字，并进入编辑模式</div>
</li>
<li class="level1"><div class="li"> c$     擦除从当前位置至行末的内容，并进入编辑模式</div>
</li>
<li class="level1"><div class="li"> s     删除当前字符并进入编辑模式</div>
</li>
<li class="level1"><div class="li"> S     删除光标所在行并进入编辑模式</div>
</li>
<li class="level1"><div class="li"> xp     交换当前字符和下一个字符</div>
</li>
<li class="level1"><div class="li"> u     撤销</div>
</li>
<li class="level1"><div class="li"> ctrl+r     重做</div>
</li>
<li class="level1"><div class="li"> .     重复上一个编辑命令</div>
</li>
<li class="level1"><div class="li"> ~     切换大小写，当前字符</div>
</li>
<li class="level1"><div class="li"> g~iw     切换当前字的大小写</div>
</li>
<li class="level1"><div class="li"> gUiw     将当前字变成大写</div>
</li>
<li class="level1"><div class="li"> guiw     将当前字变成小写</div>
</li>
<li class="level1"><div class="li"> »     将当前行右移一个单位</div>
</li>
<li class="level1"><div class="li"> «     将当前行左移一个单位(一个tab符)</div>
</li>
<li class="level1"><div class="li"> ==     自动缩进当前行</div>
</li>
</ol>

<p>
 插入模式
</p>
<ol>
<li class="level1"><div class="li"> i     从当前光标处进入插入模式</div>
</li>
<li class="level1"><div class="li"> I     进入插入模式，并置光标于行首</div>
</li>
<li class="level1"><div class="li"> a     追加模式，置光标于当前光标之后</div>
</li>
<li class="level1"><div class="li"> A     追加模式，置光标于行末</div>
</li>
<li class="level1"><div class="li"> o     在当前行之下新加一行，并进入插入模式</div>
</li>
<li class="level1"><div class="li"> O     在当前行之上新加一行，并进入插入模式</div>
</li>
<li class="level1"><div class="li"> Esc     退出插入模式</div>
</li>
</ol>

<p>
 可视模式
</p>

<p>
 标记文本
</p>
<ol>
<li class="level1"><div class="li"> v     进入可视模式，单字符模式</div>
</li>
<li class="level1"><div class="li"> V     进入可视模式，行模式</div>
</li>
<li class="level1"><div class="li"> ctrl+v     进入可视模式，列模式，类似于UE的列模式</div>
</li>
<li class="level1"><div class="li"> o     跳转光标到选中块的另一个端点</div>
</li>
<li class="level1"><div class="li"> U     将选中块中的内容转成大写</div>
</li>
<li class="level1"><div class="li"> O     跳转光标到块的另一个端点</div>
</li>
<li class="level1"><div class="li"> aw     选中一个字</div>
</li>
<li class="level1"><div class="li"> ab     选中括号中的所有内容，包括括号本身</div>
</li>
<li class="level1"><div class="li"> aB     选中{}括号中的所有内容</div>
</li>
<li class="level1"><div class="li"> ib     选中括号中的内容，不含括号</div>
</li>
<li class="level1"><div class="li"> iB     选中{}中的内容，不含{}</div>
</li>
</ol>

<p>
 对标记进行动作
</p>
<ol>
<li class="level1"><div class="li"> &gt;     块右移</div>
</li>
<li class="level1"><div class="li"> &lt;     块左移</div>
</li>
<li class="level1"><div class="li"> y     复制块</div>
</li>
<li class="level1"><div class="li"> d     删除块</div>
</li>
<li class="level1"><div class="li"> ~     切换块中内容的大小写</div>
</li>
</ol>

</div>
<!-- EDIT1 SECTION "linux下常用vim命令" [2-] -->